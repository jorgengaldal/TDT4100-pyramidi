@startuml Klassediagram for plan

class Song implements Playable

interface Playable

interface PlayableContainer

' abstract class PlayableContainer implements Playable

' class Album extends PlayableContainer

class PyramidLayer {
    ' extends PlayableContainer?
    ' List<Playable> contents
}

class Pyramid implements PlayableContainer {
    ' List<PyramidLayer> layers

    ' Song getNextSong()
}

class Player {
    ' Playable currentPlayable
    

    ' void next()
}

class PyramidLayerIterator

class PyramidLayerPlayableIterator

class PyramidPlayableIterator

class PlayablesLibrary


Pyramid --> PyramidLayer : "layers"
PyramidLayer --> Playable : "contents"
Player --> Playable : "currentPlayable"
Player --> PlayableContainer : "currentPlayableContainer"
PyramidPlayableIterator --> PyramidLayerPlayableIterator : "iterators"
PyramidLayerPlayableIterator --> PyramidLayer : "layer"
PyramidLayerIterator --> Pyramid : "pyramid"
PlayablesLibrary --> Playable : "playables"


@enduml